@page "/ClienteTelerik"

<PageTitle>CLIENTE</PageTitle>


@inject IServiceCliente serviceCliente

<h1>CLIENTE</h1>

<p>CLIENTE</p>

<TelerikGrid Data="@clientes"
            EditMode="@GridEditMode.Popup"

             Pageable="true"
             Sortable="true"
             OnCreate="@CreateHandler"
             OnDelete="@RemoveHandler"
             OnUpdate="@ModifyHandler" 
             FilterMode="@GridFilterMode.FilterRow">
    <GridToolBar>
        <GridCommandButton Command="Add" Icon="add">Add Client</GridCommandButton>
    </GridToolBar>
    <GridColumns>
        <GridColumn Field="idCliente" Title="Identificacion" />
        <GridColumn Field="nombre" />
        <GridColumn Field="fecha" />
        <GridColumn Field="nacionalidad" />
        <GridColumn Field="premium" />
        
    
        <GridCommandColumn>
            <GridCommandButton Command="Save" Icon="save" ShowInEdit="true">Crear</GridCommandButton>
            <GridCommandButton Command="Delete" Icon="delete">Delete</GridCommandButton>
            <GridCommandButton Command="Cancel" Icon="cancel" ShowInEdit="true">Cancel</GridCommandButton>
            <GridCommandButton Command="Edit" Icon="edit">Edit</GridCommandButton>
        </GridCommandColumn>
    </GridColumns>
</TelerikGrid>

@code {

    private List<Cliente> clientes = new();

    protected override async Task OnInitializedAsync()
    {
        clientes = await serviceCliente.RetrieveAllClientesAsync();
        //clientes = await SensorService. GetClienteAsync();
    }
    async Task CreateHandler(GridCommandEventArgs args)
    {
        Cliente newCliente = (Cliente)args.Item;

        await serviceCliente.AddClienteAsync(newCliente);


        clientes = await serviceCliente.RetrieveAllClientesAsync();


    }
    async Task RemoveHandler(GridCommandEventArgs args)
    {
        Cliente dropCliente = (Cliente)args.Item;

        await serviceCliente.RemoveClienteAsync(dropCliente.idCliente);
        //linea para actualizar la grlla de telerik
      clientes = await serviceCliente.RetrieveAllClientesAsync();
    }
     async Task ModifyHandler(GridCommandEventArgs args)
    {
        Cliente updateCliente = (Cliente)args.Item;

        await serviceCliente.ModifyClienteAsync(updateCliente.idCliente,updateCliente);
         //linea para actualizar la grlla de telerik
       clientes = await serviceCliente.RetrieveAllClientesAsync();
    }
}
