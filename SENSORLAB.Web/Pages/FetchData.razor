@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using SENSORLAB.Web.Data
@using SENSORLAB.Web.Models
@inject WeatherForecastService ForecastService
@inject Sensor1Services SensorService
@inject Sensor2Services SensorService2

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    <table class="table">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Fecha</th>
                <th>Nacionalidad</th>
                <th>Premium</th>

            </tr>
        </thead>
        <tbody>
            @if (clientes.Count() > 0) { 
            @foreach (var cliente in clientes)
            {
                <tr>
                    <td>@cliente.nombre</td>
                    <td>@cliente.fecha</td>
                    <td>@cliente.nacionalidad</td>
                    <td>@cliente.premium</td>
                    
                </tr>
            }
            }
        </tbody>
    </table>
    <table class="table">
        <thead>
            <tr>
                <th>idSensor</th>
                <th>fabricante</th>

            </tr>
        </thead>
        <tbody>
            @if (sensors.Count() > 0) { 
            @foreach (var Sensor in sensors)
            {
                <tr>
                    <td>@Sensor.idSensor</td>
                    <td>@Sensor.fabricante</td>
                    
                </tr>
            }
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private List<Cliente> clientes = new();
    private List<Sensor> sensors = new();

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
       // clientes = await SensorService. GetClienteAsync();
        //await SensorService2.PostSensorAsync(new Sensor() { idSensor = 17, fabricante="prueba3"});
           var sensor = await SensorService2.PostSensorAsync(new Sensor() { });
        sensors  = await SensorService2. GetSensorAsync();
    }
}
